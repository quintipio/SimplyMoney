<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AucunCompteSecondaire" xml:space="preserve">
    <value>Nenhuma conta foi detectado na unidade principal. Se você já tiver criado um, esperar, a sincronização pode levar tempo. Se você não tem uma unidade principal, e você quiser usar este como tal, você pode redefinir as configurações da aplicação.</value>
  </data>
  <data name="AucunCompteSelect" xml:space="preserve">
    <value>Não tem conta selecionada</value>
  </data>
  <data name="AucunFichier" xml:space="preserve">
    <value>Nenhum arquivo na memória</value>
  </data>
  <data name="AucunMdp" xml:space="preserve">
    <value>Senha campo vazio</value>
  </data>
  <data name="ChampsVide" xml:space="preserve">
    <value>Alguns campos estão vazios</value>
  </data>
  <data name="CompteDejaPresent" xml:space="preserve">
    <value>O nome dessa conta já existe.</value>
  </data>
  <data name="DateLimieteEcheancier" xml:space="preserve">
    <value>O prazo deve ser maior que a data de assinatura do calendário</value>
  </data>
  <data name="DeviseTropLong" xml:space="preserve">
    <value>O campo de moeda não deve conter mais de 15 caracteres.</value>
  </data>
  <data name="ErreurRestaurer" xml:space="preserve">
    <value>Recuperação de erros</value>
  </data>
  <data name="ErreurSauvegarde" xml:space="preserve">
    <value>Erro ao salvar</value>
  </data>
  <data name="ListeCompteVide" xml:space="preserve">
    <value>Pelo menos uma conta é necessário.</value>
  </data>
  <data name="NomTropLong" xml:space="preserve">
    <value>O nome do campo não deve conter mais de 100 caracteres.</value>
  </data>
  <data name="PeriodicitePerso" xml:space="preserve">
    <value>O número de dias deve ser maior que zero</value>
  </data>
  <data name="RestaurerOK" xml:space="preserve">
    <value>Restauração feito</value>
  </data>
  <data name="RoamingMouvementPlein" xml:space="preserve">
    <value>Não é possível adicionar um movimento, a partilha de espaço atingiu sua capacidade máxima. Por favor, sincronizar o movimento já esperando na unidade principal, ou o espaço vazio nas configurações de sincronização.</value>
  </data>
  <data name="SauvegardeOK" xml:space="preserve">
    <value>Backup feito</value>
  </data>
  <data name="SelectionFichier" xml:space="preserve">
    <value>Seleção Erro de arquivo</value>
  </data>
  <data name="SoldeIncorrect" xml:space="preserve">
    <value>O âmbito do saldo inicial é incorrecta.</value>
  </data>
  <data name="SupressionCategImpossible" xml:space="preserve">
    <value>Suprresion nesta categoria possível, ele é usado por algum movimento nas contas ou por determinados prazos.</value>
  </data>
  <data name="SupressionSousCategImpossible" xml:space="preserve">
    <value>Suprresion não nesta categoria, ele é usado por algum movimento nas contas ou por determinados prazos.</value>
  </data>
</root>